AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    saga-ec

    Sample SAM Template for saga-ec

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Runtime: python3.6
        Timeout: 15
        MemorySize: 256
        Environment: 
          Variables: 
            TABLE_ORDER: SagaEcOrder
            QUEUE_ORDER: saga-ec-order.fifo
            # TABLE_NAME: !Ref SamSampleDynamoTable #★変更箇所

Resources:
    SagaEcOrderCreateFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: order.create
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /orders
              Method: post

    SagaEcOrderCreateCompensatedFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: order.createCompensated
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'

    SagaEcOrderSfn:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: order_sfn.create
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order_sfn/lambda_function.zip'

    SagaEcOrderReadFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: order.read
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /orders/{txId}
              Method: get

    SagaEcOrderListFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: order.list
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /orders
              Method: get

    SagaEcStockCreateFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: stock.create
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda
        CodeUri: 'functions/stock/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /stocks
              Method: post
          MySQSEvent:
            Type: SQS
            Properties:
              Queue: 'arn:aws:sqs:us-east-1:725683553534:saga-ec-order'
              BatchSize: 10

    SagaEcStockCreateComensatedFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: stock.createCompensated
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda
        CodeUri: 'functions/stock/lambda_function.zip'
        Events:

    SagaEcStockListFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: stock.list
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /stocks
              Method: get

    SagaEcStockListMasterFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: stock.listMaster
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /items/stocks
              Method: get

    SagaEcPaymentCreateFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: payment.create
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda
        #lambda-queue 
        CodeUri: 'functions/payment/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /payments
              Method: post
 
    SagaEcPaymentListFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: payment.list
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /payments
              Method: get

    SagaEcPaymentListMasterFunction:
      Type: AWS::Serverless::Function
      Properties:
        Runtime: python3.6
        Handler: payment.listMaster
        Role: arn:aws:iam::725683553534:role/saga-ec-Lambda  
        CodeUri: 'functions/order/lambda_function.zip'
        Events:
          Api:
            Type: Api
            Properties:
              Path: /users/payments
              Method: get

    LambdaToDynamoDbIamRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: "sts:AssumeRole"
        Policies:
          -
            PolicyName: "billing_mail_for_lambda"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: "Allow"
                  Action: "dynamodb:*"
                  Resource: "*"

# Outputs:

    # HelloWorldApi:
    #   Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    #   Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"

    # HelloWorldFunction:
    #   Description: "Hello World Lambda Function ARN"
    #   Value: !GetAtt HelloWorldFunction.Arn

    # HelloWorldFunctionIamRole:
    #   Description: "Implicit IAM Role created for Hello World function"
    #   Value: !GetAtt HelloWorldFunctionRole.Arn
