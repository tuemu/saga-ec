AWSTemplateFormatVersion: '2010-09-09'
Description: 'saga-ec

  Sample SAM Template for saga-ec

  '
Globals:
  Function:
    Environment:
      Variables:
        TABLE_NAME:
          Ref: SamSampleDynamoTable
        TABLE_ORDER: SagaEcOrder
    MemorySize: 256
    Runtime: python3.6
    Timeout: 15
Resources:
  HelloWorldFunction:
    Properties:
      CodeUri: s3://sam.saga-ec/67239d35f513ed02f93e7fc9c6b26f68
      Environment:
        Variables:
          PARAM1: VALUE
      Events:
        Api:
          Properties:
            Method: get
            Path: /hello
          Type: Api
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
        - LambdaToDynamoDbIamRole
        - Arn
      Runtime: python3.6
    Type: AWS::Serverless::Function
  LambdaToDynamoDbIamRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
        Version: '2012-10-17'
      Policies:
      - PolicyDocument:
          Statement:
          - Action: dynamodb:*
            Effect: Allow
            Resource: '*'
          Version: '2012-10-17'
        PolicyName: billing_mail_for_lambda
    Type: AWS::IAM::Role
  SamGetFunction:
    Properties:
      CodeUri: s3://sam.saga-ec/6d710008db346d6356857a0547021b11
      Events:
        Api:
          Properties:
            Method: get
            Path: /sample
          Type: Api
      Handler: get_function.lambda_handler
      Role: arn:aws:iam::725683553534:role/saga-ec-Lambda
      Runtime: python3.6
    Type: AWS::Serverless::Function
  SamSampleDynamoTable:
    Properties:
      PrimaryKey:
        Name: name
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
    Type: AWS::Serverless::SimpleTable
Transform: AWS::Serverless-2016-10-31
